#!/bin/bash

#SECPI_PATH="/opt/secpi"
SECPI_PATH="/Volumes/Data/fhstp/8_sem/99_alarmpi/dev"
PID_PATH="$SECPI_PATH/run/"
PID_NAME="worker.pid"
SECPI_USER="philip"
SECPI_GROUP="admin"

function start {
	echo "Starting SecPi Worker..."
	# create folder for pid storage
	#mkdir -p $PID_PATH
	# and set permissions
	#chown $SECPI_USER:$SECPI_GROUP $PID_PATH
	# set python path so other files can be found
	export PYTHONPATH=$SECPI_PATH
	# execute as lower rights user
	python $SECPI_PATH/worker/worker.py $SECPI_PATH &
	ID=$!
	echo $ID > $PID_PATH$PID_NAME
	echo "Started with PID $ID!"
}

function stop {
	echo "Stopping SecPi Worker..."
	if [ -f $PID_PATH$PID_NAME ];
	then
		ID=`cat $PID_PATH$PID_NAME`
		kill -9 $ID > /dev/null 2>&1
		rm $PID_PATH$PID_NAME
		echo "Stopped $ID!"
	else
		echo "SecPi Worker not running!"
	fi
}

function status {
	if [ -f $PID_PATH$PID_NAME ];
	then
		ID=`cat $PID_PATH$PID_NAME`
		# pid file exists, check if process is really running
		kill -0 $ID > /dev/null 2>&1
		if [ $? -ne 0 ];
		then
			echo "SecPi Worker not running!"
			# PID file exists but not running --> remove PID file
			rm $PID_PATH$PID_NAME
		else
			echo "SecPi Worker running with Process-ID $ID"
		fi
	else
		echo "SecPi Worker not running!"
	fi
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		stop
		start
		;;
	status)
		status
		;;
	*)
		echo "Usage: /etc/init.d/secpi-worker {start|stop|restart|status}"
		exit 1
		;;
esac

exit 0
